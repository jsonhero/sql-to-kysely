import { PostgreSQLLexer } from '../lib/pgsql/PostgreSQLLexer';
import { PostgreSQLParser } from '../lib/pgsql/PostgreSQLParser';
import BasicParser from './common/basicParser';
export default class PostgresSQL extends BasicParser {
    constructor() {
        super(...arguments);
        this.preferredRules = new Set();
    }
    createLexerFormCharStream(charStreams) {
        const lexer = new PostgreSQLLexer(charStreams);
        return lexer;
    }
    createParserFromTokenStream(tokenStream) {
        return new PostgreSQLParser(tokenStream);
    }
    get splitListener() {
        return null;
    }
    processCandidates(candidates, allTokens, caretTokenIndex) {
        return {
            syntax: [],
            keywords: [],
        };
    }
}
//# sourceMappingURL=pgsql.js.map